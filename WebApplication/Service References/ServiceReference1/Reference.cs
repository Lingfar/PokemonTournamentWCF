//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PokemonComposite", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PokemonComposite : WebApplication.ServiceReference1.EntityObjectComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.CaracterisiqueComposite CaracteristiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.ETypeElement TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.CaracterisiqueComposite Caracteristique {
            get {
                return this.CaracteristiqueField;
            }
            set {
                if ((object.ReferenceEquals(this.CaracteristiqueField, value) != true)) {
                    this.CaracteristiqueField = value;
                    this.RaisePropertyChanged("Caracteristique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.ETypeElement Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObjectComposite", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication.ServiceReference1.CaracterisiqueComposite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication.ServiceReference1.StadeComposite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication.ServiceReference1.MatchComposite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication.ServiceReference1.TournoiComposite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication.ServiceReference1.PokemonComposite))]
    public partial class EntityObjectComposite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaracterisiqueComposite", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CaracterisiqueComposite : WebApplication.ServiceReference1.EntityObjectComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttaqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EsquiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VitesseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attaque {
            get {
                return this.AttaqueField;
            }
            set {
                if ((this.AttaqueField.Equals(value) != true)) {
                    this.AttaqueField = value;
                    this.RaisePropertyChanged("Attaque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Defense {
            get {
                return this.DefenseField;
            }
            set {
                if ((this.DefenseField.Equals(value) != true)) {
                    this.DefenseField = value;
                    this.RaisePropertyChanged("Defense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Esquive {
            get {
                return this.EsquiveField;
            }
            set {
                if ((this.EsquiveField.Equals(value) != true)) {
                    this.EsquiveField = value;
                    this.RaisePropertyChanged("Esquive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PV {
            get {
                return this.PVField;
            }
            set {
                if ((this.PVField.Equals(value) != true)) {
                    this.PVField = value;
                    this.RaisePropertyChanged("PV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Vitesse {
            get {
                return this.VitesseField;
            }
            set {
                if ((this.VitesseField.Equals(value) != true)) {
                    this.VitesseField = value;
                    this.RaisePropertyChanged("Vitesse");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StadeComposite", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class StadeComposite : WebApplication.ServiceReference1.EntityObjectComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttaqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NbPlacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.ETypeElement TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attaque {
            get {
                return this.AttaqueField;
            }
            set {
                if ((this.AttaqueField.Equals(value) != true)) {
                    this.AttaqueField = value;
                    this.RaisePropertyChanged("Attaque");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Defense {
            get {
                return this.DefenseField;
            }
            set {
                if ((this.DefenseField.Equals(value) != true)) {
                    this.DefenseField = value;
                    this.RaisePropertyChanged("Defense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NbPlaces {
            get {
                return this.NbPlacesField;
            }
            set {
                if ((this.NbPlacesField.Equals(value) != true)) {
                    this.NbPlacesField = value;
                    this.RaisePropertyChanged("NbPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.ETypeElement Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchComposite", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MatchComposite : WebApplication.ServiceReference1.EntityObjectComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPokemonVainqueurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.EPhaseTournoi PhaseTournoiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.PokemonComposite Pokemon1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.PokemonComposite Pokemon2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.StadeComposite StadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TournoiField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPokemonVainqueur {
            get {
                return this.IdPokemonVainqueurField;
            }
            set {
                if ((this.IdPokemonVainqueurField.Equals(value) != true)) {
                    this.IdPokemonVainqueurField = value;
                    this.RaisePropertyChanged("IdPokemonVainqueur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.EPhaseTournoi PhaseTournoi {
            get {
                return this.PhaseTournoiField;
            }
            set {
                if ((this.PhaseTournoiField.Equals(value) != true)) {
                    this.PhaseTournoiField = value;
                    this.RaisePropertyChanged("PhaseTournoi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.PokemonComposite Pokemon1 {
            get {
                return this.Pokemon1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Pokemon1Field, value) != true)) {
                    this.Pokemon1Field = value;
                    this.RaisePropertyChanged("Pokemon1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.PokemonComposite Pokemon2 {
            get {
                return this.Pokemon2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Pokemon2Field, value) != true)) {
                    this.Pokemon2Field = value;
                    this.RaisePropertyChanged("Pokemon2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.StadeComposite Stade {
            get {
                return this.StadeField;
            }
            set {
                if ((object.ReferenceEquals(this.StadeField, value) != true)) {
                    this.StadeField = value;
                    this.RaisePropertyChanged("Stade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tournoi {
            get {
                return this.TournoiField;
            }
            set {
                if ((object.ReferenceEquals(this.TournoiField, value) != true)) {
                    this.TournoiField = value;
                    this.RaisePropertyChanged("Tournoi");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TournoiComposite", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TournoiComposite : WebApplication.ServiceReference1.EntityObjectComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.MatchComposite[] MatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.PokemonComposite[] PokemonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.StadeComposite[] StadesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication.ServiceReference1.PokemonComposite VainqueurField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.MatchComposite[] Matches {
            get {
                return this.MatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchesField, value) != true)) {
                    this.MatchesField = value;
                    this.RaisePropertyChanged("Matches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.PokemonComposite[] Pokemons {
            get {
                return this.PokemonsField;
            }
            set {
                if ((object.ReferenceEquals(this.PokemonsField, value) != true)) {
                    this.PokemonsField = value;
                    this.RaisePropertyChanged("Pokemons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.StadeComposite[] Stades {
            get {
                return this.StadesField;
            }
            set {
                if ((object.ReferenceEquals(this.StadesField, value) != true)) {
                    this.StadesField = value;
                    this.RaisePropertyChanged("Stades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication.ServiceReference1.PokemonComposite Vainqueur {
            get {
                return this.VainqueurField;
            }
            set {
                if ((object.ReferenceEquals(this.VainqueurField, value) != true)) {
                    this.VainqueurField = value;
                    this.RaisePropertyChanged("Vainqueur");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETypeElement", Namespace="http://schemas.datacontract.org/2004/07/PokemonTournamentEntities")]
    public enum ETypeElement : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Eau = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Feu = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sol = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insecte = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plante = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dragon = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EPhaseTournoi", Namespace="http://schemas.datacontract.org/2004/07/PokemonTournamentEntities")]
    public enum EPhaseTournoi : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeiziemeFinale = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HuitimeFinale = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuartFinale = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemiFinale = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finale = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPokemons", ReplyAction="http://tempuri.org/IService/GetAllPokemonsResponse")]
        WebApplication.ServiceReference1.PokemonComposite[] GetAllPokemons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPokemons", ReplyAction="http://tempuri.org/IService/GetAllPokemonsResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.PokemonComposite[]> GetAllPokemonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPokemonById", ReplyAction="http://tempuri.org/IService/GetPokemonByIdResponse")]
        WebApplication.ServiceReference1.PokemonComposite GetPokemonById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPokemonById", ReplyAction="http://tempuri.org/IService/GetPokemonByIdResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.PokemonComposite> GetPokemonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewPokemon", ReplyAction="http://tempuri.org/IService/AddNewPokemonResponse")]
        bool AddNewPokemon(WebApplication.ServiceReference1.PokemonComposite pokemon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewPokemon", ReplyAction="http://tempuri.org/IService/AddNewPokemonResponse")]
        System.Threading.Tasks.Task<bool> AddNewPokemonAsync(WebApplication.ServiceReference1.PokemonComposite pokemon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePokemonById", ReplyAction="http://tempuri.org/IService/DeletePokemonByIdResponse")]
        bool DeletePokemonById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePokemonById", ReplyAction="http://tempuri.org/IService/DeletePokemonByIdResponse")]
        System.Threading.Tasks.Task<bool> DeletePokemonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePokemon", ReplyAction="http://tempuri.org/IService/UpdatePokemonResponse")]
        bool UpdatePokemon(WebApplication.ServiceReference1.PokemonComposite pokemon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePokemon", ReplyAction="http://tempuri.org/IService/UpdatePokemonResponse")]
        System.Threading.Tasks.Task<bool> UpdatePokemonAsync(WebApplication.ServiceReference1.PokemonComposite pokemon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllStades", ReplyAction="http://tempuri.org/IService/GetAllStadesResponse")]
        WebApplication.ServiceReference1.StadeComposite[] GetAllStades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllStades", ReplyAction="http://tempuri.org/IService/GetAllStadesResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.StadeComposite[]> GetAllStadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStadeById", ReplyAction="http://tempuri.org/IService/GetStadeByIdResponse")]
        WebApplication.ServiceReference1.StadeComposite GetStadeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStadeById", ReplyAction="http://tempuri.org/IService/GetStadeByIdResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.StadeComposite> GetStadeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewStade", ReplyAction="http://tempuri.org/IService/AddNewStadeResponse")]
        bool AddNewStade(WebApplication.ServiceReference1.StadeComposite stade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewStade", ReplyAction="http://tempuri.org/IService/AddNewStadeResponse")]
        System.Threading.Tasks.Task<bool> AddNewStadeAsync(WebApplication.ServiceReference1.StadeComposite stade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStade", ReplyAction="http://tempuri.org/IService/UpdateStadeResponse")]
        bool UpdateStade(WebApplication.ServiceReference1.StadeComposite stade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStade", ReplyAction="http://tempuri.org/IService/UpdateStadeResponse")]
        System.Threading.Tasks.Task<bool> UpdateStadeAsync(WebApplication.ServiceReference1.StadeComposite stade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteStadeById", ReplyAction="http://tempuri.org/IService/DeleteStadeByIdResponse")]
        bool DeleteStadeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteStadeById", ReplyAction="http://tempuri.org/IService/DeleteStadeByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteStadeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllMatches", ReplyAction="http://tempuri.org/IService/GetAllMatchesResponse")]
        WebApplication.ServiceReference1.MatchComposite[] GetAllMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllMatches", ReplyAction="http://tempuri.org/IService/GetAllMatchesResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.MatchComposite[]> GetAllMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMatchById", ReplyAction="http://tempuri.org/IService/GetMatchByIdResponse")]
        WebApplication.ServiceReference1.MatchComposite GetMatchById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMatchById", ReplyAction="http://tempuri.org/IService/GetMatchByIdResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.MatchComposite> GetMatchByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllTournois", ReplyAction="http://tempuri.org/IService/GetAllTournoisResponse")]
        WebApplication.ServiceReference1.TournoiComposite[] GetAllTournois();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllTournois", ReplyAction="http://tempuri.org/IService/GetAllTournoisResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.TournoiComposite[]> GetAllTournoisAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTournoiById", ReplyAction="http://tempuri.org/IService/GetTournoiByIdResponse")]
        WebApplication.ServiceReference1.TournoiComposite GetTournoiById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTournoiById", ReplyAction="http://tempuri.org/IService/GetTournoiByIdResponse")]
        System.Threading.Tasks.Task<WebApplication.ServiceReference1.TournoiComposite> GetTournoiByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/NewTournoi", ReplyAction="http://tempuri.org/IService/NewTournoiResponse")]
        bool NewTournoi(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/NewTournoi", ReplyAction="http://tempuri.org/IService/NewTournoiResponse")]
        System.Threading.Tasks.Task<bool> NewTournoiAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTournoiById", ReplyAction="http://tempuri.org/IService/DeleteTournoiByIdResponse")]
        bool DeleteTournoiById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTournoiById", ReplyAction="http://tempuri.org/IService/DeleteTournoiByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteTournoiByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WebApplication.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WebApplication.ServiceReference1.IService>, WebApplication.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication.ServiceReference1.PokemonComposite[] GetAllPokemons() {
            return base.Channel.GetAllPokemons();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.PokemonComposite[]> GetAllPokemonsAsync() {
            return base.Channel.GetAllPokemonsAsync();
        }
        
        public WebApplication.ServiceReference1.PokemonComposite GetPokemonById(int id) {
            return base.Channel.GetPokemonById(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.PokemonComposite> GetPokemonByIdAsync(int id) {
            return base.Channel.GetPokemonByIdAsync(id);
        }
        
        public bool AddNewPokemon(WebApplication.ServiceReference1.PokemonComposite pokemon) {
            return base.Channel.AddNewPokemon(pokemon);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewPokemonAsync(WebApplication.ServiceReference1.PokemonComposite pokemon) {
            return base.Channel.AddNewPokemonAsync(pokemon);
        }
        
        public bool DeletePokemonById(int id) {
            return base.Channel.DeletePokemonById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePokemonByIdAsync(int id) {
            return base.Channel.DeletePokemonByIdAsync(id);
        }
        
        public bool UpdatePokemon(WebApplication.ServiceReference1.PokemonComposite pokemon) {
            return base.Channel.UpdatePokemon(pokemon);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePokemonAsync(WebApplication.ServiceReference1.PokemonComposite pokemon) {
            return base.Channel.UpdatePokemonAsync(pokemon);
        }
        
        public WebApplication.ServiceReference1.StadeComposite[] GetAllStades() {
            return base.Channel.GetAllStades();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.StadeComposite[]> GetAllStadesAsync() {
            return base.Channel.GetAllStadesAsync();
        }
        
        public WebApplication.ServiceReference1.StadeComposite GetStadeById(int id) {
            return base.Channel.GetStadeById(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.StadeComposite> GetStadeByIdAsync(int id) {
            return base.Channel.GetStadeByIdAsync(id);
        }
        
        public bool AddNewStade(WebApplication.ServiceReference1.StadeComposite stade) {
            return base.Channel.AddNewStade(stade);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewStadeAsync(WebApplication.ServiceReference1.StadeComposite stade) {
            return base.Channel.AddNewStadeAsync(stade);
        }
        
        public bool UpdateStade(WebApplication.ServiceReference1.StadeComposite stade) {
            return base.Channel.UpdateStade(stade);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStadeAsync(WebApplication.ServiceReference1.StadeComposite stade) {
            return base.Channel.UpdateStadeAsync(stade);
        }
        
        public bool DeleteStadeById(int id) {
            return base.Channel.DeleteStadeById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStadeByIdAsync(int id) {
            return base.Channel.DeleteStadeByIdAsync(id);
        }
        
        public WebApplication.ServiceReference1.MatchComposite[] GetAllMatches() {
            return base.Channel.GetAllMatches();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.MatchComposite[]> GetAllMatchesAsync() {
            return base.Channel.GetAllMatchesAsync();
        }
        
        public WebApplication.ServiceReference1.MatchComposite GetMatchById(int id) {
            return base.Channel.GetMatchById(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.MatchComposite> GetMatchByIdAsync(int id) {
            return base.Channel.GetMatchByIdAsync(id);
        }
        
        public WebApplication.ServiceReference1.TournoiComposite[] GetAllTournois() {
            return base.Channel.GetAllTournois();
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.TournoiComposite[]> GetAllTournoisAsync() {
            return base.Channel.GetAllTournoisAsync();
        }
        
        public WebApplication.ServiceReference1.TournoiComposite GetTournoiById(int id) {
            return base.Channel.GetTournoiById(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication.ServiceReference1.TournoiComposite> GetTournoiByIdAsync(int id) {
            return base.Channel.GetTournoiByIdAsync(id);
        }
        
        public bool NewTournoi(string name) {
            return base.Channel.NewTournoi(name);
        }
        
        public System.Threading.Tasks.Task<bool> NewTournoiAsync(string name) {
            return base.Channel.NewTournoiAsync(name);
        }
        
        public bool DeleteTournoiById(int id) {
            return base.Channel.DeleteTournoiById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTournoiByIdAsync(int id) {
            return base.Channel.DeleteTournoiByIdAsync(id);
        }
    }
}
